name: "Playwright and JFrog Integration"

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 4: Install Playwright browsers
      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      # Step 5: Start the server
      - name: Start the server
        run: |
          npm start &  # Run the server in the background
          echo $! > server.pid  # Save the process ID (PID) for later termination

      # Step 6: Run Playwright Tests
      - name: Run Playwright Tests
        run: |
          set +e  # Allow script to continue even if tests fail
          npx playwright test --reporter=html
          echo "TEST_RESULT=$?" >> $GITHUB_ENV  # Store the exit code (0=pass, non-zero=fail)
        continue-on-error: true  # Continue even if tests fail

      # Step 7: Check for failed tests
      - name: Check for Failed Tests
        id: check_failed
        run: |
          if grep -q '"status": "failed"' test-results/.last-run.json; then
            echo "Tests have failed."
            echo "failed=true" >> $GITHUB_ENV
          else
            echo "All tests passed."
            echo "failed=false" >> $GITHUB_ENV
          fi

      # Step 8: Stop the server
      - name: Stop the server
        run: |
          kill $(cat server.pid)  # Kill the server using the saved PID
          rm server.pid  # Clean up the PID file

      # Step 9: Upload Playwright HTML Report
      - name: Upload Playwright HTML Report
        if: always()  # Upload the report regardless of test outcomes
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report

      # Step 10: Upload Failed Test Results
      - name: Upload Failed Test Results
        if: env.failed == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: failed-test-results
          path: test-results/.last-run.json
